name: Build project
on: [push, pull_request]
jobs:
  build:
    name: Build my project
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true
          
      - name: Create .upmconfig.toml UPM authentication file
        run: |
          mkdir /home/runner/work/_temp/_github_home
          cd /home/runner/work/_temp/_github_home
          echo "[npmAuth.\"http://verdaccio.pixelheartsoftware.com\"]" >> .upmconfig.toml
          echo "token = \"${{ secrets.NPM_TOKEN }}\"" >> .upmconfig.toml
          echo "email = \"piotr.kaczmarski@pixelheartsoftware.com\"" >> .upmconfig.toml
          echo "alwaysAuth = true" >> .upmconfig.toml

      # Cache
      - uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      # Test
      - name: Run tests
        uses: game-ci/unity-test-runner@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: WebGL

      # Output
      - uses: actions/upload-artifact@v2
        with:
          name: Build
          path: build
  deploy:
    name: Deploy the project
    runs-on: ubuntu-latest
    steps:
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: unnecessary
      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
      - name: Just show the paths you bastard
        run: ls ${{ secrets.DIRDIR }}
      - name: Deploy with rsync
        run: rsync -avz /github/workspace/build/ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/${{ secrets.SSH_USER }}/